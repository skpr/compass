name: 📋 Test

on:
  pull_request:
    types: [ synchronize, opened, reopened, ready_for_review ]

concurrency:
  group: test-${{ github.head_ref }}
  cancel-in-progress: true

env:
  K6_SCRIPTS_DIR: ./performance-testing/scripts
  K6_SCENARIO: ./performance-testing/scenarios/basic.js
  K6_RESULTS_DIR: ./performance-testing/results

jobs:
  collector:
    name: Collector
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Git clone the repository
        uses: actions/checkout@v3

      - name: 📋 Docker Build (Lint / Test / Build)
        run: |
          cd collector
          docker build -t test .

  extension:
    name: Extension
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Git clone the repository
        uses: actions/checkout@v3

      - name: 📋 Docker Build (Lint / Test / Build)
        run: |
          cd extension
          docker build -t test .

  performance:
    name: Performance
    needs:
      - collector
      - extension

    # Only execute this job if we allow it
    if: contains(github.event.pull_request.labels.*.name, 'needs-performance-test')

    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Git clone the repository
        uses: actions/checkout@v3

      - name: 📁 Init
        run: |
          # Create performance testing results directory.
          sudo mkdir -p ${K6_RESULTS_DIR}
          sudo chmod 777 ${K6_RESULTS_DIR}

      - name: 📦 Build Images
        run: |
          make build

      - name: 📦 Setup
        run: |
          DOCKER_COMPOSE_PROFILE=no-collector EXTENSION_INSTALLED=false EXTENSION_ENABLED=false make up install

      # Uncomment for CPU / Memory / IO statistics.
      # - name: Collect Workflow Telemetry
      #   uses: catchpoint/workflow-telemetry-action@v2

      - name: 🧪 K6 - Execute Baseline Performance Test
        run: |
          bash ${K6_SCRIPTS_DIR}/k6_run.sh ${K6_SCENARIO} ${K6_RESULTS_DIR} baseline.json

      - name: ⚙️ Install Extension + Not Enabled
        run: |
          DOCKER_COMPOSE_PROFILE=no-collector EXTENSION_ENABLED=false make stop up

      - name: 🧪 K6 - Execute Extension Installed (Not Enabled) Performance Test
        run: |
          bash ${K6_SCRIPTS_DIR}/k6_run.sh ${K6_SCENARIO} ${K6_RESULTS_DIR} disabled.json

      - name: ⚙️ Enable Extension
        run: |
          DOCKER_COMPOSE_PROFILE=no-collector make stop up

      - name: 🧪 K6 - Execute Extension Enabled Performance Test
        run: |
          bash ${K6_SCRIPTS_DIR}/k6_run.sh ${K6_SCENARIO} ${K6_RESULTS_DIR} enabled.json

      - name: ⚙️ Enable Collector
        run: |
          make up

      - name: 🧪 K6 - Execute Collector Enabled Performance Test
        run: |
          bash ${K6_SCRIPTS_DIR}/k6_run.sh ${K6_SCENARIO} ${K6_RESULTS_DIR} collector.json

      - name: 📋 Review Test Results
        run: |
          cd ./performance-testing/results
          go run ../scripts/results.go

      - name: 📦 Collect Test Result Comment Details
        id: comment
        if: always()
        run: |
          results=$(cat ${K6_RESULTS_DIR}/comment.txt)
          echo "results=$results" >> "$GITHUB_OUTPUT"

      - name: 📋 Print Logs
        if: always()
        run: |
          mkdir -p artifact/logs
          docker compose logs nginx > artifact/logs/nginx.log
          docker compose logs php-fpm > artifact/logs/php-fpm.log
          docker compose logs mysql-default > artifact/logs/mysql-default.log
          docker compose logs collector > artifact/logs/collector.log

      - name: Archive Logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: logs
          path: |
            artifact/logs

      - name: Archive Reqults
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: results
          path: |
            performance-testing/results

      - name: 📋 Post Test Results to Comment
        uses: peter-evans/create-or-update-comment@v4
        if: ${{ github.event_name == 'pull_request' }} && always()
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            Performance Data
            ----------------
            ${{ steps.comment.outputs.results }}
